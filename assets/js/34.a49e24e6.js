(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{397:function(t,n,s){"use strict";s.r(n);var a=s(11),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"goquery-selector-选择器-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goquery-selector-选择器-示例"}},[t._v("#")]),t._v(" goquery selector(选择器) 示例")]),t._v(" "),s("blockquote",[s("p",[t._v("文章转载自：http://www.flysnow.org/")])]),t._v(" "),s("p",[t._v("最近研究Go爬虫相关的知识，使用到goquery这个库比较多，尤其是对爬取到的HTML进行选择和查找匹配的内容时，goquery的选择器使用尤其多，而且还有很多不常用但又很有用的选择器，这里总结下，以供参考。")]),t._v(" "),s("p",[t._v("如果大家以前做过前端开发，对jquery不会陌生，goquery类似jquery，它是jquery的go版本实现。使用它，可以很方便的对HTML进行处理。")]),t._v(" "),s("h2",{attrs:{id:"基于html-element-元素的选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于html-element-元素的选择器"}},[t._v("#")]),t._v(" 基于HTML Element 元素的选择器")]),t._v(" "),s("p",[t._v("这个比较简单，就是基于"),s("code",[t._v("a")]),t._v(","),s("code",[t._v("p")]),t._v("等这些HTML的基本元素进行选择，这种直接使用Element名称作为选择器即可。比如"),s("code",[t._v('dom.Find("div")')]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<body>\n\n\t\t\t\t<div>DIV1</div>\n\t\t\t\t<div>DIV2</div>\n\t\t\t\t<span>SPAN</span>\n\n\t\t\t</body>\n\t\t\t`")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上示例，可以把"),s("code",[t._v("div")]),t._v("元素筛选出来，而"),s("code",[t._v("body")]),t._v(","),s("code",[t._v("span")]),t._v("并不会被筛选。")]),t._v(" "),s("h2",{attrs:{id:"id-选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id-选择器"}},[t._v("#")]),t._v(" ID 选择器")]),t._v(" "),s("p",[t._v("这个是使用频次最多的，类似于上面的例子，有两个"),s("code",[t._v("div")]),t._v("元素，其实我们只需要其中的一个，那么我们只需要给这个标记一个唯一的"),s("code",[t._v("id")]),t._v("即可，这样我们就可以使用"),s("code",[t._v("id")]),t._v("选择器，精确定位了。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div id="div1">DIV1</div>\n\t\t\t\t<div>DIV2</div>\n\t\t\t\t<span>SPAN</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#div1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"element-id-选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-id-选择器"}},[t._v("#")]),t._v(" Element ID 选择器")]),t._v(" "),s("p",[s("code",[t._v("id")]),t._v("选择器以"),s("code",[t._v("#")]),t._v("开头，紧跟着元素"),s("code",[t._v("id")]),t._v("的值，使用语法为"),s("code",[t._v("dom.Find(#id)")]),t._v(",后面的例子我会简写为"),s("code",[t._v("Find(#id)")]),t._v(",大家知道这是代表goquery选择器的即可。")]),t._v(" "),s("p",[t._v("如果有相同的ID，但是它们又分别属于不同的HTML元素怎么办？有好办法，和Element结合起来。比如我们筛选元素为"),s("code",[t._v("div")]),t._v(",并且"),s("code",[t._v("id")]),t._v("是"),s("code",[t._v("div1")]),t._v("的元素，就可以使用"),s("code",[t._v("Find(div#div1)")]),t._v("这样的筛选器进行筛选。")]),t._v(" "),s("p",[t._v("所以这类筛选器的语法为"),s("code",[t._v("Find(element#id)")]),t._v("，这是常用的组合方法，比如后面讲的过滤器也可以采用这种方式组合使用。")]),t._v(" "),s("h2",{attrs:{id:"class选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class选择器"}},[t._v("#")]),t._v(" Class选择器")]),t._v(" "),s("p",[s("code",[t._v("class")]),t._v("也是HTML中常用的属性，我们可以通过"),s("code",[t._v("class")]),t._v("选择器来快速的筛选需要的HTML元素，它的用法和"),s("code",[t._v("ID")]),t._v("选择器类似，为"),s("code",[t._v('Find(".class")')]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div id="div1">DIV1</div>\n\t\t\t\t<div class="name">DIV2</div>\n\t\t\t\t<span>SPAN</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上示例中，就筛选出来"),s("code",[t._v("class")]),t._v("为"),s("code",[t._v("name")]),t._v("的这个"),s("code",[t._v("div")]),t._v("元素。")]),t._v(" "),s("h2",{attrs:{id:"element-class-选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-class-选择器"}},[t._v("#")]),t._v(" Element Class 选择器")]),t._v(" "),s("p",[s("code",[t._v("class")]),t._v("选择器和"),s("code",[t._v("id")]),t._v("选择器一样，也可以结合着HTML元素使用，他们的语法也类似"),s("code",[t._v("Find(element.class)")]),t._v("，这样就可以筛选特定element、并且指定class的元素。")]),t._v(" "),s("h2",{attrs:{id:"属性选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性选择器"}},[t._v("#")]),t._v(" 属性选择器")]),t._v(" "),s("p",[t._v("一个HTML元素都有自己的属性以及属性值，所以我们也可以通过属性和值筛选元素。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div>DIV1</div>\n\t\t\t\t<div class="name">DIV2</div>\n\t\t\t\t<span>SPAN</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div[class]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("示例中我们通过"),s("code",[t._v("div[class]")]),t._v("这个选择器，筛选出Element为"),s("code",[t._v("div")]),t._v("并且有"),s("code",[t._v("class")]),t._v("这个属性的，所以第一个"),s("code",[t._v("div")]),t._v("没有被筛选到。")]),t._v(" "),s("p",[t._v("刚刚上面这个示例是采用是否存在某个属性为筛选器，同理，我们可以筛选出属性为某个值的元素。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div[class=name]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这样我们就可以筛选出"),s("code",[t._v("class")]),t._v("这个属性值为"),s("code",[t._v("name")]),t._v("的"),s("code",[t._v("div")]),t._v("元素。")]),t._v(" "),s("p",[t._v("当然我们这里以"),s("code",[t._v("class")]),t._v("属性为例，还可以用其他属性，比如"),s("code",[t._v("href")]),t._v("等很多，自定义属性也是可以的。")]),t._v(" "),s("p",[t._v("除了完全相等，还有其他匹配方式，使用方式类似，这里统一列举下，不再举例")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("选择器")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选含有lang属性的div元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性为zh的div元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang!=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性不等于zh的div元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang¦=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性为zh或者zh-开头的div元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang*=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性包含zh这个字符串的div元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang~=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性包含zh这个单词的div元素，单词以空格分开的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang$=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性以zh结尾的div元素，区分大小写")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v('Find(“div[lang^=zh]")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("筛选lang属性以zh开头的div元素，区分大小写")])])])]),t._v(" "),s("p",[t._v("以上是属性筛选器的用法，都是以一个属性筛选器为例，当然你也可以使用多个属性筛选器组合使用，比如： "),s("code",[t._v('Find("div[id][lang=zh]")')]),t._v(",用多个中括号连起来即可。当有多个属性筛选器的时候，要同时满足这些筛选器的元素才能被筛选出来。")]),t._v(" "),s("h2",{attrs:{id:"parent-child选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parent-child选择器"}},[t._v("#")]),t._v(" parent>child选择器")]),t._v(" "),s("p",[t._v("如果我们想筛选出某个元素下符合条件的子元素，我们就可以使用子元素筛选器，它的语法为"),s("code",[t._v('Find("parent>child")')]),t._v(",表示筛选parent这个父元素下，符合child这个条件的最直接（一级）的子元素。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div lang="ZH">DIV1</div>\n\t\t\t\t<div lang="zh-cn">DIV2</div>\n\t\t\t\t<div lang="en">DIV3</div>\n\t\t\t\t<span>\n\t\t\t\t\t<div>DIV4</div>\n\t\t\t\t</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body>div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上示例，筛选出"),s("code",[t._v("body")]),t._v("这个父元素下，符合条件的最直接的子元素"),s("code",[t._v("div")]),t._v("，结果是"),s("code",[t._v("DIV1、DIV2、DIV3")]),t._v("，虽然"),s("code",[t._v("DIV4")]),t._v("也是"),s("code",[t._v("body")]),t._v("的子元素，但不是一级的，所以不会被筛选到。")]),t._v(" "),s("p",[t._v("那么问题来了，我就是想把"),s("code",[t._v("DIV4")]),t._v("也筛选出来怎么办?就是要筛选"),s("code",[t._v("body")]),t._v("下所有的"),s("code",[t._v("div")]),t._v("元素，不管是一级、二级还是N级。有办法的，goquery考虑到了，只需要把大于号("),s("code",[t._v(">")]),t._v(")改为空格就好了。比如上面的例子，改为如下选择器即可。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h2",{attrs:{id:"prev-next相邻选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prev-next相邻选择器"}},[t._v("#")]),t._v(" prev+next相邻选择器")]),t._v(" "),s("p",[t._v("假设我们要筛选的元素没有规律，但是该元素的上一个元素有规律，我们就可以使用这种下一个相邻选择器来进行选择。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<p>P1</p>\n\t\t\t\t<div lang="zh-cn">DIV2</div>\n\t\t\t\t<div lang="en">DIV3</div>\n\t\t\t\t<span>\n\t\t\t\t\t<div>DIV4</div>\n\t\t\t\t</span>\n\t\t\t\t<p>P2</p>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div[lang=zh]+p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这个示例演示了这种用法，我们想选择"),s("code",[t._v("<p>P1</p>")]),t._v("这个元素，但是没啥规律，我们发现它前面的"),s("code",[t._v('<div lang="zh">DIV1</div>')]),t._v("很有规律，可以选择，所以我们就可以采用"),s("code",[t._v('Find("div[lang=zh]+p")')]),t._v("达到选择"),s("code",[t._v("P")]),t._v("元素的目的。")]),t._v(" "),s("p",[t._v("这种选择器的语法是"),s("code",[t._v('("prev+next")')]),t._v("，中间是一个加号(+)，+号前后也是选择器。")]),t._v(" "),s("h2",{attrs:{id:"prev-next选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prev-next选择器"}},[t._v("#")]),t._v(" prev~next选择器")]),t._v(" "),s("p",[t._v("有相邻就有兄弟，兄弟选择器就不一定要求相邻了，只要他们共有一个父元素就可以。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div[lang=zh]~p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("刚刚的例子，只需要把"),s("code",[t._v("+")]),t._v("号换成"),s("code",[t._v("~")]),t._v("号,就可以把"),s("code",[t._v("P2")]),t._v("也筛选出来，因为"),s("code",[t._v("P2")]),t._v("、"),s("code",[t._v("P1")]),t._v("和"),s("code",[t._v("DIV1")]),t._v("都是兄弟。")]),t._v(" "),s("p",[t._v("兄弟选择器的语法是"),s("code",[t._v('("prev~next")')]),t._v(",也就是相邻选择器的"),s("code",[t._v("+")]),t._v("换成了"),s("code",[t._v("~")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"内容过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容过滤器"}},[t._v("#")]),t._v(" 内容过滤器")]),t._v(" "),s("p",[t._v("有时候我们使用选择器选择出来后后，希望再过滤一下，这时候就用到过滤器了，过滤器有很多，我们先讲内容过滤器这一种。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div:contains(DIV2)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v('Find(":contains(text)")')]),t._v("表示筛选出的元素要包含指定的文本，我们例子中要求选择出的"),s("code",[t._v("div")]),t._v("元素要包含"),s("code",[t._v("DIV2")]),t._v("文本，那么只有一个"),s("code",[t._v("DIV2")]),t._v("元素满足要求。")]),t._v(" "),s("p",[t._v("此外还有"),s("code",[t._v('Find(":empty")')]),t._v("表示筛选出的元素都不能有子元素（包括文本元素），只筛选那些不包含任何子元素的元素。")]),t._v(" "),s("p",[s("code",[t._v('Find(":has(selector)")')]),t._v("和"),s("code",[t._v("contains")]),t._v("差不多，只不过这个是包含的是元素节点。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v(" dom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"span:has(div)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("以上示例表示筛选出包含"),s("code",[t._v("div")]),t._v("元素的"),s("code",[t._v("span")]),t._v("节点。")]),t._v(" "),s("h2",{attrs:{id:"first-child过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-child过滤器"}},[t._v("#")]),t._v(" :first-child过滤器")]),t._v(" "),s("p",[s("code",[t._v(":first-child")]),t._v("过滤器，语法为"),s("code",[t._v('Find(":first-child")')]),t._v("，表示筛选出的元素要是他们的父元素的第一个子元素，如果不是，则不会被筛选出来。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<p>P1</p>\n\t\t\t\t<div lang="zh-cn">DIV2</div>\n\t\t\t\t<div lang="en">DIV3</div>\n\t\t\t\t<span>\n\t\t\t\t\t<div style="display:none;">DIV4</div>\n\t\t\t\t\t<div>DIV5</div>\n\t\t\t\t</span>\n\t\t\t\t<p>P2</p>\n\t\t\t\t<div></div>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div:first-child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上例子中，我们使用"),s("code",[t._v('Find("div")')]),t._v("会筛选出所有的"),s("code",[t._v("div")]),t._v("元素，但是我们加了"),s("code",[t._v(":first-child")]),t._v("后，就只有"),s("code",[t._v("DIV1")]),t._v("和"),s("code",[t._v("DIV4")]),t._v("了，因为只有这两个是他们父元素的第一个子元素，其他的"),s("code",[t._v("DIV")]),t._v("都不满足。")]),t._v(" "),s("h2",{attrs:{id:"first-of-type过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-of-type过滤器"}},[t._v("#")]),t._v(" :first-of-type过滤器")]),t._v(" "),s("p",[s("code",[t._v(":first-child")]),t._v("选择器限制的比较死，必须得是第一个子元素，如果该元素前有其他在前面，就不能用"),s("code",[t._v(":first-child")]),t._v("了，这时候"),s("code",[t._v(":first-of-type")]),t._v("就派上用场了，它要求只要是这个类型的第一个就可以，我们把上面的例子微调下。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<p>P1</p>\n\t\t\t\t<div lang="zh-cn">DIV2</div>\n\t\t\t\t<div lang="en">DIV3</div>\n\t\t\t\t<span>\n\t\t\t\t\t<p>P2</p>\n\t\t\t\t\t<div>DIV5</div>\n\t\t\t\t</span>\n\t\t\t\t<div></div>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div:first-of-type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("改动很简单，把原来的"),s("code",[t._v("DIV4")]),t._v("换成了"),s("code",[t._v("P2")]),t._v("，如果我们还使用"),s("code",[t._v(":first-child")]),t._v(","),s("code",[t._v("DIV5")]),t._v("是不能被筛选出来的，因为它不是第一个子元素，它前面还有一个"),s("code",[t._v("P2")]),t._v("。这时候我们使用"),s("code",[t._v(":first-of-type")]),t._v("就可以达到目的，因为它要求是同类型第一个就可以。"),s("code",[t._v("DIV5")]),t._v("就是这个"),s("code",[t._v("div")]),t._v("类型的第一个元素，"),s("code",[t._v("P2")]),t._v("不是"),s("code",[t._v("div")]),t._v("类型，被忽略。")]),t._v(" "),s("h2",{attrs:{id:"last-child-和-last-of-type过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-child-和-last-of-type过滤器"}},[t._v("#")]),t._v(" :last-child 和 :last-of-type过滤器")]),t._v(" "),s("p",[t._v("这两个正好和上面的"),s("code",[t._v(":first-child")]),t._v("、"),s("code",[t._v(":first-of-type")]),t._v("相反，表示最后一个，这里不再举例，大家可以自己试试。")]),t._v(" "),s("h2",{attrs:{id:"nth-child-n-过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nth-child-n-过滤器"}},[t._v("#")]),t._v(" :nth-child(n) 过滤器")]),t._v(" "),s("p",[t._v("这个表示筛选出的元素是其父元素的第n个元素，n以1开始。所以我们可以知道"),s("code",[t._v(":first-child")]),t._v("和"),s("code",[t._v(":nth-child(1)")]),t._v("是相等的。通过指定"),s("code",[t._v("n")]),t._v("，我们就很灵活的筛选出我们需要的元素。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<p>P1</p>\n\t\t\t\t<div lang="zh-cn">DIV2</div>\n\t\t\t\t<div lang="en">DIV3</div>\n\t\t\t\t<span>\n\t\t\t\t\t<p>P2</p>\n\t\t\t\t\t<div>DIV5</div>\n\t\t\t\t</span>\n\t\t\t\t<div></div>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div:nth-child(3)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这个示例会筛选出"),s("code",[t._v("DIV2")]),t._v("，因为"),s("code",[t._v("DIV2")]),t._v("是其父元素"),s("code",[t._v("body")]),t._v("的第三个子元素。")]),t._v(" "),s("h2",{attrs:{id:"nth-of-type-n-过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nth-of-type-n-过滤器"}},[t._v("#")]),t._v(" :nth-of-type(n) 过滤器")]),t._v(" "),s("p",[s("code",[t._v(":nth-of-type(n)")]),t._v("和 "),s("code",[t._v(":nth-child(n)")]),t._v(" 类似，只不过它表示的是同类型元素的第n个,所以"),s("code",[t._v(":nth-of-type(1)")]),t._v(" 和 "),s("code",[t._v(":first-of-type")]),t._v("是相等的，大家可以自己试试，这里不再举例。")]),t._v(" "),s("h2",{attrs:{id:"nth-last-child-n-和-nth-last-of-type-n-过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nth-last-child-n-和-nth-last-of-type-n-过滤器"}},[t._v("#")]),t._v(" nth-last-child(n) 和:nth-last-of-type(n) 过滤器")]),t._v(" "),s("p",[t._v("这两个和上面的类似，只不过是倒序开始计算的，最后一个元素被当成了第一个。大家自己测试下看看效果，很明显。")]),t._v(" "),s("h2",{attrs:{id:"only-child-过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#only-child-过滤器"}},[t._v("#")]),t._v(" :only-child 过滤器")]),t._v(" "),s("p",[s("code",[t._v('Find(":only-child")')]),t._v(" 过滤器，从字面上看，可以猜测出来，它表示筛选的元素，在其父元素中，只有它自己，它的父元素没有其他子元素，才会被匹配筛选出来。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<span>\n\t\t\t\t\t<div>DIV5</div>\n\t\t\t\t</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div:only-child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("示例中"),s("code",[t._v("DIV5")]),t._v("就可以被筛选出来，因为它是它的父元素"),s("code",[t._v("span")]),t._v("达到唯一子元素，但"),s("code",[t._v("DIV1")]),t._v("就不是，所以不能呗筛选出来。")]),t._v(" "),s("h2",{attrs:{id:"only-of-type-过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#only-of-type-过滤器"}},[t._v("#")]),t._v(" :only-of-type 过滤器")]),t._v(" "),s("p",[t._v("上面的例子，如果想筛选出"),s("code",[t._v("DIV1")]),t._v("怎么办？可以使用"),s("code",[t._v('Find(":only-of-type")')]),t._v(",因为它是它的父元素中，唯一的"),s("code",[t._v("div")]),t._v("元素，这就是"),s("code",[t._v(":only-of-type")]),t._v("过滤器所要做的，同类型元素只要只有一个，就可以被筛选出来。大家把上面的例子改成"),s("code",[t._v(":only-of-type")]),t._v("试试，看看是否有"),s("code",[t._v("DIV1")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"选择器或-运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择器或-运算"}},[t._v("#")]),t._v(" 选择器或(|)运算")]),t._v(" "),s("p",[t._v("如果我们想同时筛选出"),s("code",[t._v("div")]),t._v(","),s("code",[t._v("span")]),t._v("等元素怎么办？这时候可以采用多个选择器进行组合使用，并且以逗号(,)分割，"),s("code",[t._v('Find("selector1, selector2, selectorN")')]),t._v("表示，只要满足其中一个选择器就可以被筛选出来，也就是选择器的或(|)运算操作。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`<body>\n\t\t\t\t<div lang="zh">DIV1</div>\n\t\t\t\t<span>\n\t\t\t\t\t<div>DIV5</div>\n\t\t\t\t</span>\n\n\t\t\t</body>\n\t\t\t`')]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewDocumentFromReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tdom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div,span"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("goquery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("goquery 是解析HTML网页必备的利器，在爬虫抓取网页的过程中，灵活的使用goquery不同的选择器，可以让我们的抓取工作事半功倍，大大提升爬虫的效率。")])])}),[],!1,null,null,null);n.default=e.exports}}]);