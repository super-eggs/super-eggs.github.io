(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{420:function(t,e,a){"use strict";a.r(e);var s=a(11),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Git Hook(钩子) 是 Git 在代码提交、推送、合并等工作流程中引入的事件触发器，其中最常用的场景是代码检查，持续集成，自动部署等。本文主要讲解一下利用 Git webhook 实现自动部署。")]),t._v(" "),a("h1",{attrs:{id:"一、git-hook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、git-hook"}},[t._v("#")]),t._v(" 一、Git hook")]),t._v(" "),a("p",[t._v("Git 的 hook 分为本地仓库 hook 和服务器仓库 hook。")]),t._v(" "),a("h2",{attrs:{id:"本地-hook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地-hook"}},[t._v("#")]),t._v(" 本地 hook")]),t._v(" "),a("p",[t._v("本地 hook 通常在代码的 .git/hooks 目录下，如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ hooks git:(master) ls\napplypatch-msg.sample     pre-commit.sample         prepare-commit-msg.sample\ncommit-msg.sample         update.sample\npost-update.sample        pre-push.sample\npre-applypatch.sample     pre-rebase.sample \n")])])]),a("p",[t._v("默认情况下，这些脚本不会生效。使用时，只需将 "),a("code",[t._v(".sample")]),t._v(" 后缀去掉，然后赋予脚本执行权限即可。")]),t._v(" "),a("p",[t._v("本地 hook 主要用于代码静态分析、REVIEW、代码规范、命名规范等。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("pre-commit")]),t._v(" "),a("p",[t._v("提交之前的代码检查，包括是否通过单元测试，静态代码分析")])]),t._v(" "),a("li",[a("p",[t._v("prepare-commit-msg")]),t._v(" "),a("p",[t._v("提交信息之前，可用来生成默认的提交信息")])]),t._v(" "),a("li",[a("p",[t._v("commit-msg")]),t._v(" "),a("p",[t._v("提交信息之后，可用来检查提交信息是否符合特定的格式")])]),t._v(" "),a("li",[a("p",[t._v("post-commit")]),t._v(" "),a("p",[t._v("提交代码之后，一般用来通知代码已提交。")])]),t._v(" "),a("li",[a("p",[t._v("post-checkout")]),t._v(" "),a("p",[t._v("checkout 代码之后，可用来设置工作目录、生成文档、生成静态资源等工作")])]),t._v(" "),a("li",[a("p",[t._v("post-merge")]),t._v(" "),a("p",[t._v("合并代码之后，可用来保存 merge 操作中，git 没有保存的信息。")])]),t._v(" "),a("li",[a("p",[t._v("pre-push")]),t._v(" "),a("p",[t._v("push 代码之前，可用来检查本次 push 的 commits 是否符合特定的标准。")])])]),t._v(" "),a("h2",{attrs:{id:"服务器-hook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器-hook"}},[t._v("#")]),t._v(" 服务器 hook")]),t._v(" "),a("p",[t._v("服务器 hook 指代码传输到服务器时，在服务器端所做的一系列操作。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("pre-receive")]),t._v(" "),a("p",[t._v("处理 push 操作之前，可以检查本次 push 的 commits 和文件是否符合特定的标准。")])]),t._v(" "),a("li",[a("p",[t._v("update")]),t._v(" "),a("p",[t._v("update 与 pre-receive 操作类似，不同的是 pre-receive 只执行一次，而 update 可能执行多次。")])]),t._v(" "),a("li",[a("p",[t._v("post-receive")]),t._v(" "),a("p",[t._v("整个提交过程完成之后，可用于更新其它服务或通知用户，比如发邮件告诉开发人员已提交代码，通知持续集成 (Continuous Integration) 服务器部署代码")])])]),t._v(" "),a("h2",{attrs:{id:"webhook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webhook"}},[t._v("#")]),t._v(" webhook")]),t._v(" "),a("p",[t._v("如果 Git 服务部署在自己的服务器上，如用 "),a("a",{attrs:{href:"https://about.gitlab.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab"),a("OutboundLink")],1),t._v(" 搭建一套 Git 服务，则可以使用服务器 hook。如果使用了 "),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://bitbucket.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitbucket"),a("OutboundLink")],1),t._v(" 等云端平台，那么只能使用 webhook 来完成脚本。")]),t._v(" "),a("p",[t._v("webhook 本质上属于服务器 hook，因为发送通知的方式是网络请求，因此得名。使用 webhook 的步骤如下：")]),t._v(" "),a("ol",[a("li",[t._v("设置用于接收请求的 URL。")]),t._v(" "),a("li",[t._v("服务器收到 push、pull request、merge、tag 等操作时，会将相应信息发送给步骤 1 里的 URL。")]),t._v(" "),a("li",[t._v("URL 对应的程序收到网络请求后，执行自动部署、邮件通知等操作。")])]),t._v(" "),a("h1",{attrs:{id:"二、部署-webhook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、部署-webhook"}},[t._v("#")]),t._v(" 二、部署 webhook")]),t._v(" "),a("h2",{attrs:{id:"环境假设"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境假设"}},[t._v("#")]),t._v(" 环境假设")]),t._v(" "),a("p",[t._v("为叙述方便，我们做如下假设。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("项目")]),t._v(" "),a("th",[t._v("值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("域名")]),t._v(" "),a("td",[t._v("www.weixinbook.net")])]),t._v(" "),a("tr",[a("td",[t._v("接收请求的URL")]),t._v(" "),a("td",[t._v("https://www.weixinbook.net/webhook.php")])]),t._v(" "),a("tr",[a("td",[t._v("项目部署目录")]),t._v(" "),a("td",[t._v("/var/www/weixinbook")])]),t._v(" "),a("tr",[a("td",[t._v("build.sh路径")]),t._v(" "),a("td",[t._v("/var/www/hooks/build.sh")])]),t._v(" "),a("tr",[a("td",[t._v("webhook.php")]),t._v(" "),a("td",[t._v("/var/www/weixinbook/webhook.php")])]),t._v(" "),a("tr",[a("td",[t._v("环境")]),t._v(" "),a("td",[t._v("nginx php")])]),t._v(" "),a("tr",[a("td",[t._v("用户组")]),t._v(" "),a("td",[t._v("www-data")])])])]),t._v(" "),a("h2",{attrs:{id:"git-项目地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-项目地址"}},[t._v("#")]),t._v(" Git 项目地址")]),t._v(" "),a("p",[t._v("Git 项目需要使用 SSH 地址，如 "),a("code",[t._v("git@github.com:xxx/xxx.git")]),t._v(" 。如果之前采用了 HTTPS 链接，需要修改 .git/config 文件里的 url 字段：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('vi .git/config\n\n[remote "origin"]\n    url = git@github.com:xxx/xxx.git\n    fetch = +refs/heads/*:refs/remotes/origin/* \n')])])]),a("h2",{attrs:{id:"部署-ssh-无密码登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署-ssh-无密码登录"}},[t._v("#")]),t._v(" 部署 SSH 无密码登录")]),t._v(" "),a("p",[t._v("首先需要生成 SSH key。")]),t._v(" "),a("p",[t._v("如果使用 nginx:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('sudo  -u www-data ssh-keygen -t rsa -C "nginx" \n')])])]),a("p",[t._v("如果使用 apache:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('sudo -u apache ssh-keygen -t rsa -C "apache" \n')])])]),a("p",[t._v("然后复制你的 public key，粘贴到项目的“SSH 公钥”设置里。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cat ~/.ssh/id_rsa.pub \n")])])]),a("p",[t._v("以 GitHub 为例，在 Settings -> Deploy keys，选择 Add deploy key.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/2017/github_deploy_keys.png",alt:"GitHub Deploy Keys"}})]),t._v(" "),a("p",[t._v("添加完毕后，可以运行 "),a("code",[t._v("ssh -T git@github.com")]),t._v(" 来验证是否设置成功。首次运行时会看到一条 RSA key 指纹的连接确认信息，输入 "),a("code",[t._v("yes")]),t._v(" 回车即可。")]),t._v(" "),a("p",[t._v("如果看到下面的信息，就说明设置生效了。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Hi username! You've successfully authenticated, but GitHub does not\nprovide shell access. \n")])])]),a("h2",{attrs:{id:"webhook-php"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webhook-php"}},[t._v("#")]),t._v(" webhook.php")]),t._v(" "),a("p",[t._v("webhook.php 用来接收 webhook 请求，一般要做以下操作：")]),t._v(" "),a("ul",[a("li",[t._v("监测请求来源合法性。检查方法：密码，AES等。")]),t._v(" "),a("li",[t._v("检查是否为特定分支，如 master 分支。")]),t._v(" "),a("li",[t._v("启动自动部署脚本，如完成拉取最新代码，重新设置目录权限等。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<?php\n$raw_data = file_get_contents(\"php://input\");\n$pay_load = json_decode($raw_data,true);\n//监测请求来源合法性，\nif($pay_load['password'] != 'pass'){\n    exit('ok 400');\n}\n//检查是否为master分支\nif($pay_load[\"ref\"] != \"refs/heads/master\"){\n    exit('ok 401');\n}\n\nexec('sh /var/www/hooks/build.sh'); \n")])])]),a("h2",{attrs:{id:"build-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-sh"}},[t._v("#")]),t._v(" build.sh")]),t._v(" "),a("p",[t._v("build.sh 用来执行自动部署的具体操作。一般情况下，不要放在外网可访问的 webroot 目录下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#! /bin/bash\nSITE_PATH='/var/www/weixinbook'\nUSER='www-data'\nUSERGROUP='www-data'\ncd $SITE_PATH\ngit reset --hard origin/master\ngit clean -f\ngit pull\ngit checkout master\nchown -R $USER:$USERGROUP $SITE_PATH \n")])])]),a("p",[t._v("这样每次在客户端 push 代码，服务器会发请求给 webhook.php，webhook.php 检查通过后，启动 build.sh 进行自动部署。")]),t._v(" "),a("h1",{attrs:{id:"三、结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、结语"}},[t._v("#")]),t._v(" 三、结语")]),t._v(" "),a("p",[t._v("自动部署并不难，如果失败，大部分是权限问题。解决的方法很简单：")]),t._v(" "),a("ol",[a("li",[t._v("保证 ssh key 的用户为 www-data")]),t._v(" "),a("li",[t._v("保证 build.sh , webhook.php 以及代码目录的用户为 www-data.")])]),t._v(" "),a("p",[t._v("权限问题解决不了，不要草率地全用 root，这样会带来一定的安全风险。")])])}),[],!1,null,null,null);e.default=v.exports}}]);